# This jobs are only used for NOWTOLOVE

####################################################################
# Refer to http://docs.shippable.com/reference/jobs-overview/      #
# Resources are located in shippable.resources.yml file            #
# Jobs are numbered to visualize sequence                          #
####################################################################

jobs:

  # 1. Sync pipeline to CI
  - name: now-site_runCI
    type: runCI
    steps:
      - OUT: now-site-img-master
      - OUT: now-site-img-branch

  # 2branch. Manifest for a BRANCH image
  - name: now-site-man-branch
    type: manifest
    steps:
      - IN: now-site-img-branch
      - IN: now-site-opts-sit
      - TASK: managed

  # 3Branch. SIT deployment for feature BRANCH
  - name: now-site-sit-deploy-branch
    type: deploy
    always:
      - NOTIFY: now-slack-notifications
    steps:
      - IN: now-site-man-branch # for non-master, don't auto deploy.
        switch: off
      - IN: env-sit-ecs
      - IN: now-site-au-params-sit
      - IN: now-site-alb-sit-branch
        applyTo:
          - manifest: now-site-man-branch
            image: now-site-img-branch
            port: 3001
      - TASK: managed
        deployMethod: replace

  # 2. Manifest for MASTER image
  - name: now-site-man-master
    type: manifest
    steps:
      - IN: now-site-img-master
      - IN: now-site-opts-sit
      - TASK: managed

  # 3a. AU SIT deployment for MASTER
  - name: au-now-site-sit-deploy-master
    type: deploy
    always:
      - NOTIFY: now-slack-notifications
    steps:
      - IN: now-site-man-master # for master - auto deploy to SIT
        switch: on
      - IN: env-sit-ecs
      - IN: now-site-au-params-sit
      - IN: au-now-site-alb-sit
        applyTo:
          - manifest: now-site-man-master
            image: now-site-img-master
            port: 3001
      - TASK: managed
        deployMethod: upgrade

  # 3b. SIT deployment for MASTER
  - name: nz-now-site-sit-deploy-master
    type: deploy
    always:
      - NOTIFY: now-slack-notifications
    steps:
      - IN: now-site-man-master # for master - auto deploy to SIT
        switch: on
      - IN: env-sit-ecs
      - IN: now-site-nz-params-sit
      - IN: nz-now-site-alb-sit
        applyTo:
          - manifest: now-site-man-master
            image: now-site-img-master
            port: 3001
      - TASK: managed
        deployMethod: replace

  # 3c. TEST deployment for MASTER - stubbed
  - name: now-site-test-deploy-master
    type: deploy
    always:
      - NOTIFY: now-slack-notifications
    steps:
      - IN: now-site-man-master # for master - auto deploy to SIT
        switch: on
      - IN: env-sit-ecs
      - IN: now-site-params-test
      - IN: now-site-alb-test
        applyTo:
          - manifest: now-site-man-master
            image: now-site-img-master
            port: 3001
      - TASK: managed
        deployMethod: replace

  # 4a. Run regression test on TEST environment
  - name: now-site-automation-test # Test Stub site
    type: runSh
    always:
      - NOTIFY: now-slack-notifications
      - NOTIFY: now-qa-team-notifications
    steps:
     - IN: now-site-test-deploy-master
     - IN: now-site-repo
       switch: off
     - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo/gitRepo/automation
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: export URL=http://now-site.test.bxm.net.au/
        - script: npm run test:high || true
        - script: actualsize=$(wc -c <"@rerun.txt")
        - script: bash -c "if [ $actualsize -eq 0 ]; then  echo 'rerun exit code' $actualsize; else npm run test:rerun; fi"
    on_failure:
      - NOTIFY: now-deployment-notifications


  # 4b. Run compatibility regression test on TEST environment - Browser Stack
  - name: compatibility-now-site-automation-test
    type: runSh
    always:
      - NOTIFY: now-slack-notifications
      - NOTIFY: now-qa-team-notifications
    steps:
     - IN: now-site-test-deploy-master
     - IN: now-site-repo
       switch: off
     - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo/gitRepo/automation
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: rm -rf node_modules/chimp/dist/lib/cucumberjs/hooks.js
        - script: cp features/support/files/chimp_hooks.backup node_modules/chimp/dist/lib/cucumberjs/hooks.js
        - script: export URL=http://now-site.test.bxm.net.au/
        - script: npm run test:mobile
        - script: npm run test:desktop
#    on_failure:
#      - NOTIFY: now-deployment-notifications

  # 4c. Run smoke test on SIT NZ environment
  - name: nz-now-site-smoke-test
    type: runSh
    always:
      - NOTIFY: now-slack-notifications
      - NOTIFY: now-qa-team-notifications
    steps:
     - IN: nz-now-site-sit-deploy-master
     - IN: now-site-repo
       switch: off
     - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo/gitRepo/automation
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: export URL=http://now-site-nz.sit.bxm.net.au/
        - script: npm run test:nzlow || true
        - script: actualsize=$(wc -c <"@rerun.txt")
        - script: bash -c "if [ $actualsize -eq 0 ]; then  echo 'rerun exit code' $actualsize; else npm run test:rerun; fi"
    on_failure:
      - NOTIFY: now-deployment-notifications

  # 4d. Run smoke test on SIT AU environment
  - name: au-now-site-smoke-test
    type: runSh
    always:
      - NOTIFY: now-slack-notifications
      - NOTIFY: now-qa-team-notifications
    steps:
     - IN: au-now-site-sit-deploy-master
     - IN: now-site-repo
       switch: off
     - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo/gitRepo/automation
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: export URL=https://www.sit.nowtolove.com.au/
        - script: npm run sit:au || true
        - script: actualsize=$(wc -c <"@rerun.txt")
        - script: bash -c "if [ $actualsize -eq 0 ]; then  echo 'rerun exit code' $actualsize; else npm run test:rerun; fi"
    on_failure:
      - NOTIFY: now-deployment-notifications

  # 4e. Run performance test on test environment
  - name: now-performance-test
    type: runSh
    steps:
      - IN: now-site-test-deploy-master
      - IN: test-result-s3-param
      - IN: now-site-repo
        switch: off
      - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo/gitRepo/src
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        - script: sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        - script: sudo apt-get update
        - script: sudo apt-get install google-chrome-stable
        - script: google-chrome --product-version
        - script: npm run test:perf > result.txt
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: echo "FAILURE"
    always:
      script:
        - *template-lighthouse-csv-report
      NOTIFY: now-slack-notifications

  # 5. Package release for production release
  - name: now-site-release-master
    type: release
    dependencyMode: strict
    always:
      - NOTIFY: now-slack-notifications
    steps:
      - IN: now-site-automation-test
      - IN: nz-now-site-smoke-test
      - IN: au-now-site-smoke-test
      #- IN: compatibility-now-site-automation-test
      - IN: now-site-man-master
        switch: off
      - IN: now-site-version
      - TASK: managed
    on_success:
      - NOTIFY: now-deployment-notifications

  # 6a. PROD deployment for MASTER with Region AU
  - name: au-now-site-prod-deploy-master
    type: deploy
    always:
      - NOTIFY: now-slack-notifications
      - NOTIFY: now-deployment-notifications
    steps:
      - IN: now-site-release-master
        switch: off
      - IN: env-prod-ecs
      - IN: now-site-params-prod
      - IN: au-now-site-alb-prod
        applyTo:
          - manifest: now-site-man-master
            image: now-site-img-master
            port: 3001
      - TASK: managed
        deployMethod: upgrade

  # 6b. PROD deployment for MASTER with Region NZ
  - name: nz-now-site-prod-deploy-master
    type: deploy
    always:
      - NOTIFY: now-slack-notifications
      - NOTIFY: now-deployment-notifications
    steps:
      - IN: now-site-release-master
        switch: off
      - IN: env-prod-ecs
      - IN: now-site-params-prod
      - IN: now-site-params-nz-region
      - IN: nz-now-site-alb-prod
        applyTo:
          - manifest: now-site-man-master
            image: now-site-img-master
            port: 3001
      - TASK: managed
        deployMethod: upgrade

  ##############################################
  # Schedule jobs - not attached to the pipeline
  ##############################################

  # i. Full regression in TEST
  - name: FULL-now-site-regression-test
    type: runSh
    always:
      - NOTIFY: now-qa-team-notifications
    steps:
     - IN: now-site-repo
       switch: off
     - IN: now-morning-trigger
     - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo/gitRepo/automation
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: export URL=http://now-site.test.bxm.net.au/
        - script: APP_KEY=now-site npm run test:phantom || true
        - script: node rerun.combine.js
        - script: actualsize=$(wc -c <"@rerun.txt")
        - script: bash -c "if [ $actualsize -eq 0 ]; then  echo 'rerun exit code' $actualsize; else npm run test:rerun; fi"

  # ii. Smoke Test in AU NOW Dev CMS
  - name: CMS-au-now-smoke-test
    type: runSh
    always:
      - NOTIFY: now-qa-team-notifications
    steps:
     - IN: now-site-repo
       switch: off
     - IN: now-weekly-trigger
     - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo/gitRepo/automation
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: export URL=http://cms.dev.now.wn.bauer-media.net.au/cms/umbraco/
        - script: APP_KEY=now-site npm run test:cms || true
        - script: actualsize=$(wc -c <"@rerun.txt")
        - script: bash -c "if [ $actualsize -eq 0 ]; then  echo 'rerun exit code' $actualsize; else npm run test:rerun; fi"

  # iii. Smoke Test in NZ NOW Dev CMS
  - name: CMS-nz-now-smoke-test
    type: runSh
    always:
      - NOTIFY: now-qa-team-notifications
    steps:
     - IN: now-site-repo
       switch: off
     - IN: nznow-weekly-trigger
     - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo/gitRepo/automation
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: export URL=http://cms.dev.nznow.wn.bauer-media.net.au/cms/umbraco/
        - script: APP_KEY=nznow-site npm run test:cms || true
        - script: actualsize=$(wc -c <"@rerun.txt")
        - script: bash -c "if [ $actualsize -eq 0 ]; then  echo 'rerun exit code' $actualsize; else npm run test:rerun; fi"
   
  # iv. Run Performance Test on live environment
  - name: now-performance-test-live
    type: runSh
    steps:
     - IN: test-result-s3-param
     - IN: now-site-repo
       switch: off
     - IN: now-perf-live-trigger
     - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo/gitRepo/src
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        - script: sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        - script: sudo apt-get update
        - script: sudo apt-get install google-chrome-stable
        - script: google-chrome --product-version
        - script: npm run test:perflive > result.txt
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: echo "FAILURE"
    always:
      script: *template-lighthouse-csv-report
      NOTIFY: now-qa-team-notifications

  # v. Run SEO Test on live environment
  - name: now-seo-test-live
    type: runSh
    steps:
     - IN: test-result-s3-param
     - IN: now-site-repo
       switch: off
     - IN: now-seo-live-trigger
     - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo/gitRepo/src
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        - script: sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        - script: sudo apt-get update
        - script: sudo apt-get install google-chrome-stable
        - script: google-chrome --product-version
        - script: npm run test:seolive > result.txt
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: echo "FAILURE"
    always:
      script: *template-lighthouse-csv-report
      NOTIFY: now-qa-team-notifications

  # iv. Run Performance Test on live environment - NZ HTL
  - name: nz-htl-performance-test-live
    type: runSh
    steps:
     - IN: test-result-s3-param
     - IN: now-site-repo-branch
       switch: off
     - IN: now-perf-live-trigger
     - TASK:
        - script: curl https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
        - script: source ~/.nvm/nvm.sh
        - script: nvm install "8.9.1"
        - script: nvm use "8.9.1"
        - script: cd ./IN/now-site-repo-branch/gitRepo/src
        - script: npm set @bxm:registry http://npm.digital.bauer-media.net.au
        - script: npm install
        - script: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        - script: sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        - script: sudo apt-get update
        - script: sudo apt-get install google-chrome-stable
        - script: google-chrome --product-version
        - script: npm run test:nzhtlperflive > result.txt
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: echo "FAILURE"
    always:
      script: *template-lighthouse-csv-report
      NOTIFY: now-qa-team-notifications
